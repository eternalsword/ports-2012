diff -Naur a/kernel/nvidia-drm/nvidia-drm-fb.c b/kernel/nvidia-drm/nvidia-drm-fb.c
--- a/kernel/nvidia-drm/nvidia-drm-fb.c	2016-08-20 21:02:56.220661347 -0300
+++ b/kernel/nvidia-drm/nvidia-drm-fb.c	2016-08-20 21:08:56.420667987 -0300
@@ -31,6 +31,7 @@
 #include "nvidia-drm-gem.h"
 
 #include <drm/drm_crtc_helper.h>
+#include <linux/version.h>
 
 static void nvidia_framebuffer_destroy(struct drm_framebuffer *fb)
 {
@@ -113,8 +114,13 @@
      *
      * We don't support any planar format, pick up first buffer only.
      */
+    
+    #if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+        gem = drm_gem_object_lookup(file, cmd->handles[0]);
+    #else
+        gem = drm_gem_object_lookup(dev, file, cmd->handles[0]);
+    #endif
 
-    gem = drm_gem_object_lookup(dev, file, cmd->handles[0]);
 
     if (gem == NULL)
     {
diff -Naur a/kernel/nvidia-drm/nvidia-drm-gem.c b/kernel/nvidia-drm/nvidia-drm-gem.c
--- a/kernel/nvidia-drm/nvidia-drm-gem.c	2016-08-20 21:02:56.220661347 -0300
+++ b/kernel/nvidia-drm/nvidia-drm-gem.c	2016-08-20 21:10:34.160669788 -0300
@@ -27,6 +27,7 @@
 #include "nvidia-drm-priv.h"
 #include "nvidia-drm-ioctl.h"
 #include "nvidia-drm-gem.h"
+#include <linux/version.h>
 
 static struct nvidia_drm_gem_object *nvidia_drm_gem_new
 (
@@ -407,8 +408,13 @@
     int ret = -EINVAL;
 
     mutex_lock(&dev->struct_mutex);
+    
+    #if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+        gem = drm_gem_object_lookup(file, handle);
+    #else
+        gem = drm_gem_object_lookup(dev, file, handle);
+    #endif
 
-    gem = drm_gem_object_lookup(dev, file, handle);
 
     if (gem == NULL)
     {
diff -Naur a/kernel/nvidia-uvm/uvm_linux.h b/kernel/nvidia-uvm/uvm_linux.h
--- a/kernel/nvidia-uvm/uvm_linux.h	2016-08-20 21:02:56.220661347 -0300
+++ b/kernel/nvidia-uvm/uvm_linux.h	2016-08-20 21:06:33.380665350 -0300
@@ -554,12 +554,13 @@
     INIT_RADIX_TREE(tree, GFP_NOWAIT);
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
 static bool radix_tree_empty(struct radix_tree_root *tree)
 {
     void *dummy;
     return radix_tree_gang_lookup(tree, &dummy, 0, 1) == 0;
 }
-
+#endif
 
 #if !defined(NV_USLEEP_RANGE_PRESENT)
 static void __sched usleep_range(unsigned long min, unsigned long max)
